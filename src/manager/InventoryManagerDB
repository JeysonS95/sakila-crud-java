package manager;

import entity.Inventory;
import utils.DBConnection;

import java.sql.*;
import java.util.ArrayList;

public class InventoryManagerDB {
    public void post(Inventory inventory) {
        String sql = "INSERT INTO inventory (film_id, store_id, last_update) VALUES (?, ?, NOW())";

        try (Connection conn = DBConnection.getConnection();
             PreparedStatement stmt = conn.prepareStatement(sql)) {

            stmt.setInt(1, inventory.getFilmId());
            stmt.setInt(2, inventory.getStoreId());
            stmt.executeUpdate();

        } catch (SQLException e) {
            System.out.println("❌ Error al insertar inventario: " + e.getMessage());
        }
    }

    public Inventory get(int id) {
        String sql = "SELECT inventory_id, film_id, store_id FROM inventory WHERE inventory_id = ?";

        try (Connection conn = DBConnection.getConnection();
             PreparedStatement stmt = conn.prepareStatement(sql)) {

            stmt.setInt(1, id);
            ResultSet rs = stmt.executeQuery();

            if (rs.next()) {
                return new Inventory(
                    rs.getInt("inventory_id"),
                    rs.getInt("film_id"),
                    rs.getInt("store_id")
                );
            }

        } catch (SQLException e) {
            System.out.println("❌ Error al buscar inventario: " + e.getMessage());
        }

        return null;
    }

    public ArrayList<Inventory> getAll() {
        ArrayList<Inventory> list = new ArrayList<>();
        String sql = "SELECT inventory_id, film_id, store_id FROM inventory";

        try (Connection conn = DBConnection.getConnection();
             PreparedStatement stmt = conn.prepareStatement(sql);
             ResultSet rs = stmt.executeQuery()) {

            while (rs.next()) {
                list.add(new Inventory(
                    rs.getInt("inventory_id"),
                    rs.getInt("film_id"),
                    rs.getInt("store_id")
                ));
            }

        } catch (SQLException e) {
            System.out.println("❌ Error al obtener inventarios: " + e.getMessage());
        }

        return list;
    }

    public void put(int id, int newFilmId, int newStoreId) {
        String sql = "UPDATE inventory SET film_id = ?, store_id = ?, last_update = NOW() WHERE inventory_id = ?";

        try (Connection conn = DBConnection.getConnection();
             PreparedStatement stmt = conn.prepareStatement(sql)) {

            stmt.setInt(1, newFilmId);
            stmt.setInt(2, newStoreId);
            stmt.setInt(3, id);
            stmt.executeUpdate();

        } catch (SQLException e) {
            System.out.println("❌ Error al actualizar inventario: " + e.getMessage());
        }
    }

    public void delete(int id) {
        String sql = "DELETE FROM inventory WHERE inventory_id = ?";

        try (Connection conn = DBConnection.getConnection();
             PreparedStatement stmt = conn.prepareStatement(sql)) {

            stmt.setInt(1, id);
            stmt.executeUpdate();

        } catch (SQLException e) {
            System.out.println("❌ Error al eliminar inventario: " + e.getMessage());
        }
    }
}
